{"version":3,"sources":["components/NavbarComp.js","constants/GithubConstants.js","actions/GitActions.js","components/Message.js","components/SearchComp.js","components/UserProfile.js","components/Cards.js","components/UserRepos.js","components/PaginationComp.js","App.js","store.js","reducers/GitReducer.js","index.js"],"names":["NavbarComp","dark","onUpdate","Navbar","bg","variant","Brand","href","icon","faGithub","className","style","fontSize","type","id","value","onChange","htmlFor","FETCH_USER_REQUEST","FETCH_USER_SUCCESS","FETCH_USER_FAIL","FETCH_USER_RESET","FETCH_REPOS_REQUEST","FETCH_REPOS_SUCCESS","FETCH_REPOS_FAIL","FETCH_REPOS_RESET","USER_DETAILS_URL","getUserDetails","username","dispatch","a","config","headers","axios","get","data","payload","login","response","Message","children","role","SearchComp","useDispatch","userName","useRef","error","useSelector","state","userDetails","setTimeout","localStorage","removeItem","InputGroup","FormControl","placeholder","aria-label","aria-describedby","ref","Append","Button","onClick","e","current","setItem","UserProfile","userInfo","src","avatar_url","alt","faUsers","followers","following","faFolder","public_repos","company","faMapMarkerAlt","location","Cards","repos","Langcolor","lang","gitcolors","Object","entries","key","getcolor","language","faProjectDiagram","name","html_url","target","rel","faCircle","color","faStar","stargazers_count","UserRepos","map","repo","PaginationComp","reposPerPage","totalRepos","paginate","pageNumbers","i","Math","ceil","push","number","App","userRepo","useState","currentPage","setCurrentPage","setDark","useEffect","getItem","indexOfLastPost","indexOfFirstPost","currentRepo","undefined","slice","Container","fluid","Row","Col","md","length","pageNumber","reducer","combineReducers","action","loading","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e91b6705.chunk.js","sourcesContent":["import React from 'react'\nimport {Navbar} from 'react-bootstrap';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faGithub} from '@fortawesome/free-brands-svg-icons';\n\nconst NavbarComp = ({dark,onUpdate}) => {\n    return (\n        <>\n        <Navbar bg=\"dark\" variant=\"dark\">\n            <Navbar.Brand href=\"#\">\n            <FontAwesomeIcon icon={faGithub} className=\"d-inline-block align-top\" style={{fontSize:'30px'}}/>{' '}\n           Github Users\n            </Navbar.Brand>\n            <div className=\"custom-control custom-switch ml-auto\">\n                <input type=\"checkbox\" className=\"custom-control-input\" id=\"customSwitch1\" value={dark} onChange={onUpdate}/>\n                <label className=\"custom-control-label\" htmlFor=\"customSwitch1\"></label>\n            </div>\n        </Navbar>\n        </>\n    )\n}\n\nexport default NavbarComp\n","export const FETCH_USER_REQUEST = 'FETCH_USER_REQUEST';\nexport const FETCH_USER_SUCCESS = 'FETCH_USER_SUCCESS';\nexport const FETCH_USER_FAIL = 'FETCH_USER_FAIL';\nexport const FETCH_USER_RESET = 'FETCH_USER_RESET';\n\nexport const FETCH_REPOS_REQUEST = 'FETCH_REPOS_REQUEST';\nexport const FETCH_REPOS_SUCCESS = 'FETCH_REPOS_SUCCESS';\nexport const FETCH_REPOS_FAIL = 'FETCH_REPOS_FAIL';\nexport const FETCH_REPOS_RESET = 'FETCH_REPOS_RESET';","import axios from 'axios';\nimport {\n    FETCH_USER_REQUEST,\n    FETCH_USER_SUCCESS,\n    FETCH_USER_FAIL,\n    FETCH_REPOS_REQUEST,\n    FETCH_REPOS_SUCCESS\n} from '../constants/GithubConstants';\n\nconst USER_DETAILS_URL = 'https://api.github.com/users';\n\nexport const getUserDetails = (username) =>async(dispatch) =>{\n    try{\n      dispatch({\n          type:FETCH_USER_REQUEST\n      });  \n      const config = {\n        headers: {\n            \"Content-Type\": 'application/json',\n        },\n      } \n      const {data} = await axios.get(`${USER_DETAILS_URL}/${username}`,config);\n    //   console.log(data);\n      dispatch({\n          type:FETCH_USER_SUCCESS,\n          payload:data\n      })\n      if(data){\n        const {login} = data;\n        dispatch({\n          type:FETCH_REPOS_REQUEST\n        });\n        const response = await axios.get(`${USER_DETAILS_URL}/${login}/repos`,config);\n        // console.log(response.data)\n        dispatch({\n          type:FETCH_REPOS_SUCCESS,\n          payload:response.data\n        })\n      }\n    } catch (error) {\n        dispatch({\n            type:FETCH_USER_FAIL\n        })\n    }\n  }","import React from 'react'\n\nconst Message = ({children,type}) => {\n    return (\n        <div className={`alert alert-${type}`} role=\"alert\">\n                {children}\n        </div>\n    )\n}\n\nexport default Message\n","import React,{useRef} from 'react'\nimport {InputGroup,FormControl,Button} from 'react-bootstrap';\nimport {getUserDetails} from '../actions/GitActions';\nimport { useDispatch,useSelector } from \"react-redux\";\nimport Message from './Message';\nimport {FETCH_USER_RESET,FETCH_REPOS_RESET} from '../constants/GithubConstants';\n\nconst SearchComp = () => {\n\n    const dispatch = useDispatch();\n\n    const userName = useRef();\n\n    const handleSubmit = (e) =>{\n        dispatch(getUserDetails(userName.current.value))\n        localStorage.setItem('GitUser',userName.current.value);\n        userName.current.value = \"\";\n    }\n\n    const {error} = useSelector(state=>state.userDetails);\n\n\tif(error){\n        setTimeout(()=>dispatch({\n            type:FETCH_USER_RESET\n        }),2000);\n        setTimeout(()=>dispatch({\n            type:FETCH_REPOS_RESET\n        }),2000);\t\n        localStorage.removeItem('GitUser');\n    }   \n\n\n    return (\n        <div className=\"mt-2\">\n            <InputGroup className=\"mb-3\">\n                <FormControl\n                placeholder=\"Github username\"\n                aria-label=\"Github username\"\n                aria-describedby=\"basic-addon2\"\n                ref={userName}\n                />\n                <InputGroup.Append>\n                <Button variant=\"btn btn-dark\" onClick={handleSubmit}>Search</Button>\n                </InputGroup.Append>\n            </InputGroup>\n            {error && <Message type=\"danger\">Github User not Found</Message>}\n        </div>\n    )\n}\n\nexport default SearchComp\n","import React from 'react'\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faUsers,faMapMarkerAlt,faFolder} from '@fortawesome/free-solid-svg-icons';\nimport {useSelector} from 'react-redux';\n\nconst UserProfile = () => {\n\n    const {userInfo} = useSelector(state=>state.userDetails);\n\n    return (\n        <>\n            <div className=\"user-avatar\">\n                <img \n                src={userInfo && userInfo.avatar_url}\n                alt=\"\" className=\"img-fluid rounded-circle img_class\"/>\n            </div>\n            <div className=\"text-muted text-center mt-2\">\n                <strong className=\"\">{userInfo && userInfo.login}</strong><br/>\n                {userInfo && <div className=\"git-stats\">\n                <FontAwesomeIcon icon={faUsers}/> {userInfo ? userInfo.followers : 0} followers / {userInfo ? userInfo.following : 0} following\n                <p>\n                    <FontAwesomeIcon icon={faFolder}/> {userInfo ? userInfo.public_repos : 0} Public Repos\n                </p>\n                </div>}\n                <div className=\"workingstats\">\n                    <p>{userInfo && userInfo.company}</p>\n                    {userInfo && <> <FontAwesomeIcon icon={faMapMarkerAlt}/> <span>{userInfo && userInfo.location}</span> </>}\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default UserProfile;\n","import React from 'react'\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faProjectDiagram,faCircle,faStar} from '@fortawesome/free-solid-svg-icons';\nimport gitcolors from '../gitcolors.json';\n\nconst Cards = ({repos}) => {\n\n    var lang = repos.language;\n\tfunction getcolor(lang, gitcolors){\n\t  for(var [key,value] of Object.entries(gitcolors)){\n\t  if(lang === key){\n\t    return value\n\t    }\n\t  }\n\t}\n\tconst Langcolor = getcolor(lang, gitcolors);\n\n    return (\n                <div className=\"col-md-6\">\n                    <div className=\"card text-white bg-dark mb-3\">\n                        <div className=\"card-header\">\n                            <FontAwesomeIcon icon={faProjectDiagram}/> {repos.name}\n                        </div>\n                        <div className=\"card-body\">\n                            <h6 className=\"card-title\"><a href={repos.html_url} target=\"_blank\" rel=\"noreferrer\">{repos.html_url}</a></h6>\n                            <p className=\"card-text\">\n                                <FontAwesomeIcon icon={faCircle} className=\"icon-block\" style={{color:Langcolor}}/> {repos.language}\n                                <span className=\"float-right\"><FontAwesomeIcon icon={faStar}/> {repos.stargazers_count}</span>\n                            </p>\n                        </div>\n                        </div>\n                </div>\n    )\n}\n\nexport default Cards\n","import React from 'react'\nimport Cards from './Cards';\n// import {useSelector} from 'react-redux';\n\nconst UserRepos = ({repos}) => {\n\n    // const {repos} = useSelector(state=>state.userRepo);\n    // console.log(repos.length)\n    return (\n        <div>\n            {/* {repos.length !==0 && <h3 className=\"text-muted text-center mb-2\">Repositories</h3>} */}\n            <div className=\"repos\">\n                <div className=\"row\">\n                   {\n                       repos && repos.map((repo) =>(\n                        <Cards repos={repo} key={repo.id}/>\n                       ))\n                   }\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default UserRepos\n","import React from 'react'\n\n\nconst PaginationComp = ({reposPerPage,totalRepos,paginate}) => {\n  // console.log(reposPerPage,totalRepos,paginate)\n  const pageNumbers = [];\n  for(let i=1;i<=Math.ceil(totalRepos/reposPerPage);i++){\n\t\tpageNumbers.push(i);\n  }\n  \n    return (\n        <nav aria-label=\"Page navigation example\">\n        <ul className=\"pagination\">\n            {\n                pageNumbers.map(number=>(\n                  <li key={number} className=\"page-item\">\n                    <a onClick={()=>paginate(number)} href=\"#!\" className=\"page-link\">\n                      {number}\n                    </a>\n                  </li>\n                ))\n            }\n        </ul>\n      </nav>\n    )\n}\n\nexport default PaginationComp;\n","import React,{useEffect,useState} from 'react'\nimport {Nav,Search,Profile,Repos,Paginate} from './components';\nimport {Container,Row,Col} from 'react-bootstrap';\nimport {useSelector,useDispatch} from 'react-redux';\nimport {getUserDetails} from './actions/GitActions';\nimport './App.css';\n\nconst App = () =>{\n\n  const {userInfo} = useSelector(state=>state.userDetails);\n   const {repos} = useSelector(state=>state.userRepo);\n   const [currentPage,setCurrentPage] = useState(1);\n   const [reposPerPage] = useState(8);\n   const [dark,setDark] = useState(true);\n\n   const onUpdate = () =>{\n      setDark(!dark)\n      // console.log(dark)\n   }\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n      if(localStorage.getItem('GitUser')){\n          dispatch(getUserDetails(localStorage.getItem('GitUser')));\n      }\n  }, [dispatch])\n\n  const indexOfLastPost = currentPage * reposPerPage;\n  const indexOfFirstPost = indexOfLastPost - reposPerPage;\n  const currentRepo = repos !== undefined ? repos.slice(indexOfFirstPost,indexOfLastPost) : [];\n\n  // console.log(currentRepo);\n\n  const paginate = (pageNumber) =>{\n    setCurrentPage(pageNumber)\n  }\n\n  return (\n    <div>\n        <Nav dark={dark} onUpdate={onUpdate}/>\n       <div className={dark ? 'dark-theme' : 'light-theme'}>\n       <Container fluid=\"md\">\n            <Row>\n             <Col md=\"2\"></Col>\n             <Col md=\"8\"><Search /></Col>\n             <Col md=\"2\"></Col>\n            </Row>\n            <Row>\n              <Col md=\"4\">\n                   <Profile />\n                  {userInfo &&  <hr />}\n              </Col>\n              <Col md=\"8\">\n                 <Repos repos={currentRepo}/>\n              </Col>\n            </Row>\n       </Container>\n       {\n         repos !== undefined  ? (\n          <Container fluid=\"md\">\n          <Row>\n             <Col md=\"4\"></Col>\n             <Col md=\"8\" className=\"paginate-div\">\n                 <Paginate reposPerPage={reposPerPage} totalRepos={repos !== undefined ? repos.length : 0} paginate={paginate}/>\n             </Col>\n           </Row>\n      </Container>\n         ) :null \n       }\n       {/* <Container fluid>\n          <Row>\n            <Col>\n            <Footer />\n            </Col>\n          </Row>\n       </Container> */}\n       </div>\n    </div>\n  );\n}\n\nexport default App;\n","import {createStore,applyMiddleware,combineReducers} from 'redux';\nimport thunk from 'redux-thunk';\nimport {composeWithDevTools} from 'redux-devtools-extension';\n\nimport {\n    userDetailsReducer,\n    userReposReducer\n} from './reducers/GitReducer';\n\nconst reducer = combineReducers({\n    userDetails:userDetailsReducer,\n    userRepo:userReposReducer\n});\n\nconst initialState = {}\nconst middleware = [thunk];\n\nconst store = createStore(\n    reducer,\n    initialState,\n    composeWithDevTools(applyMiddleware(...middleware))\n)\n\n\nexport default store;","import {\n    FETCH_USER_REQUEST,\n    FETCH_USER_RESET,\n    FETCH_USER_FAIL,\n    FETCH_USER_SUCCESS,\n    FETCH_REPOS_REQUEST,\n    FETCH_REPOS_SUCCESS,\n    FETCH_REPOS_FAIL,\n    FETCH_REPOS_RESET\n} from '../constants/GithubConstants';\n\n\nexport const userDetailsReducer = (state={},action) =>{\n    switch(action.type){\n        case FETCH_USER_REQUEST:\n            return {loading:true};\n        case FETCH_USER_SUCCESS:\n            return {loading:false,userInfo:action.payload};\n        case FETCH_USER_FAIL:\n            return {loading:false,error:true}\n        case FETCH_USER_RESET:\n            return {}            \n        default:\n            return state;    \n    }\n}\n\nexport const userReposReducer = (repos=[],action) =>{\n    switch(action.type){\n        case FETCH_REPOS_REQUEST:\n            return {loading:true};\n        case FETCH_REPOS_SUCCESS:\n            return {loading:false,repos:action.payload};\n        case FETCH_REPOS_FAIL:\n            return {loading:false,error:true}   \n        case FETCH_REPOS_RESET:\n            return repos=[];         \n        default:\n            return repos;    \n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport {Provider} from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n   <Provider store={store}>\n      <App />\n   </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}